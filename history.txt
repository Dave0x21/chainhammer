v50 14/1/2019-15/1/2019
    new page_generator.py which makes a markdown and an HTML page from each run
    formatting issues, improved looks
    page also contains whole infodict, better safe than sorry.
    TestRPC has no empty blocks --> fix blocksDB_create/diagramming.py
    fixed issue with finalTpsAv
    diagramming also stores its blocktimesTpsAv result
    updated tests
    image-filename now also contains time-of-experiment-start to avoid overwriting
    run.sh now starts with ./is_up.py and ends with ./page_generator.py

v49 11/1/2019-13/1/2019
    run.sh = 
    virtualenv + tps.py + deploy.py + send.py + blocksDB_create.py + blocksDB_diagramming.py
    AUTOSTOP_TPS: tps.py can be stopped now, by send.py writing to last-experiment.json
    last-experiment.json contains crucial information, e.g. range of blocks
    now also as carrier of block range info into blocksBD_create/diagramming.py
    better last-experiment.json with more infos
    clienttype.py now also nodeVersion
    Web3Foundation has paid! Mention in LICENSE and README.md#credits

v48 7/1/2019 - 10/1/2019
    new diagramming; study matplotlib.plyplot, then start anew
    first as jupyter notebook, then merged into blocksDB_diagramming.py
    better appearance, scatter instead of box plots, for blocksize and blocktime
    better statistics: Now averages only over experiment blocks
    averages printed but also shown as horizontal lines
    now always 10 blocks at the end, to show averages 

v47 4/1/2019
    recognize known nodeNames, mention when new one
    is_up.py loops until network is reachable
    getReceipts_multithreaded now also as multithreading queue
    when_last_ones_mined__give_range_of_block_numbers() waits until all receipts are there,
    from beginning and end of experiment - and infers the range of blocknumbers the txs are in
    
v46 3/1/2019
    show peak TPS_average, and memorize after 3 relaxation rounds
    new switch PARITY_ALREADY_UNLOCKED
    cleaned up config.py a bit, more consistent naming, ...
    adapt tests to code changes
    fixed: account-passphrase.txt now also found within tests with Geth
    new GAS_FOR_SET_CALL constant
    remember all sent transaction hashes
    transaction success/failure checker, via random sample of txs
    criterion txReceipt.status OR gasUsed/gasGiven comparison

v45 2/1/2019
    installer script v45 = refactored into 6 separate install-XYZ.sh scripts
    upgraded all hardcoded versions (docker, pip, requirements.txt, etc)
    new beginning cloud machine, 
    tested the new install.sh locally and in the cloud

v44 17/12/2018
    installer script v44 = replaces whole top half of reproduce.md !
      cd chainhammer; scripts/install.sh

v43 5/12/2018-16/12/2018
    Reorg everything into subfolders for better overview
      docs & results for human readable, 
      networks & scripts for starting several nodes, and helper scripts,
      hammer & reader for the core chainhammer & chainreader code,
    BUT now links are broken, sorry refactoring had to be done;
     do this to find the old structure: 
      git checkout f7d9e81e4ce9f81d3ad3ad67b7f92c477b9b7419
      TODO - make this a release tag perhaps?
    Initial skeleton for run.sh
    code: import & path changes, so that tests were still running PASSED
    new tool scripts/link-checker.sh which finds all broken links in .md files. 
    had to fix 150 or so links in *.md files after reorg
    overview intros for parity.md geth.md quorum.md etc.
    virtualenv now simply in env/

v42 30/11/2018 - 4/12/2018  
    testRPC and unittesting with pytest - non-trivial, because
     Web3.TestRPCProvider() can be started but not ended again, raised an issue;
    Something (can be testrpc-py) has to be manually started before "py.test -v"
     --> new compound testing script 'pytest.sh', which keeps logs & shows color.
    Altogether 64 tests for 
     clienttools, clienttype, tps, deploy, send, blocksDB_create, blocksDB_diagramming
    All 64 PASSED on testrpc-py, quorum IBFT, geth-dev, parity instantseal & aura!
     incl tps.loopUntil_NewContract (because loop) needed clever 2 threads approach 
    Selected coverage only using .coveragerc
    Issue: parity aura has no balance, send 0
    and much more ... 
    Unittesting is ~ready, hooray.

v41 29/11/2018  experiments with testrpc-py https://pypi.org/project/eth-testrpc/ 
    = got it running, but odd timestamps, see https://github.com/pipermerriam/eth-testrpc/issues/117
    would be nice to use for the unittesting

v40 29/11/2018  initial cleaning while planning methodology chapter; 
    make more readable, remove obsolete code, add some TODOs

  
